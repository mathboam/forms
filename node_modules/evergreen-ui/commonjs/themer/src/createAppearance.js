"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _isDev = _interopRequireDefault(require("./isDev"));

var allowedProperties = ['background', 'backgroundColor', 'backgroundImage', 'borderRadius', 'transition', 'boxShadow', 'opacity', 'color', 'textShadow', 'outline', // Not sure if cursor should be configurable
'cursor', // Added to prevent pointer events on disabled tab
'pointerEvents'];
/**
 * @param {object?} obj - input object that will be filtered against the allowed properties.
 * @return {object} the result will always be a object
 */

function createAppearance() {
  var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var result = {};
  Object.keys(obj).forEach(function (key) {
    if (allowedProperties.includes(key)) {
      if (typeof obj[key] === 'string' || typeof obj[key] === 'number') {
        result[key] = obj[key];
      } else if (_isDev["default"]) {
        console.error("createAppearance() only accepts strings as properties, key '".concat(key, "' with value '").concat(obj[key], "' is not a string"));
      }
    } else if (_isDev["default"]) {
      console.error("key '".concat(key, "' is not in the allowed properties for createAppearance():"), allowedProperties);
    }
  });
  return result;
}

var _default = createAppearance;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90aGVtZXIvc3JjL2NyZWF0ZUFwcGVhcmFuY2UuanMiXSwibmFtZXMiOlsiYWxsb3dlZFByb3BlcnRpZXMiLCJjcmVhdGVBcHBlYXJhbmNlIiwib2JqIiwicmVzdWx0IiwiT2JqZWN0Iiwia2V5cyIsImZvckVhY2giLCJrZXkiLCJpbmNsdWRlcyIsImlzRGV2IiwiY29uc29sZSIsImVycm9yIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFFQSxJQUFNQSxpQkFBaUIsR0FBRyxDQUN4QixZQUR3QixFQUV4QixpQkFGd0IsRUFHeEIsaUJBSHdCLEVBS3hCLGNBTHdCLEVBT3hCLFlBUHdCLEVBUXhCLFdBUndCLEVBU3hCLFNBVHdCLEVBV3hCLE9BWHdCLEVBWXhCLFlBWndCLEVBY3hCLFNBZHdCLEVBZXhCO0FBQ0EsUUFoQndCLEVBa0J4QjtBQUNBLGVBbkJ3QixDQUExQjtBQXNCQTs7Ozs7QUFJQSxTQUFTQyxnQkFBVCxHQUFvQztBQUFBLE1BQVZDLEdBQVUsdUVBQUosRUFBSTtBQUNsQyxNQUFNQyxNQUFNLEdBQUcsRUFBZjtBQUVBQyxFQUFBQSxNQUFNLENBQUNDLElBQVAsQ0FBWUgsR0FBWixFQUFpQkksT0FBakIsQ0FBeUIsVUFBQUMsR0FBRyxFQUFJO0FBQzlCLFFBQUlQLGlCQUFpQixDQUFDUSxRQUFsQixDQUEyQkQsR0FBM0IsQ0FBSixFQUFxQztBQUNuQyxVQUFJLE9BQU9MLEdBQUcsQ0FBQ0ssR0FBRCxDQUFWLEtBQW9CLFFBQXBCLElBQWdDLE9BQU9MLEdBQUcsQ0FBQ0ssR0FBRCxDQUFWLEtBQW9CLFFBQXhELEVBQWtFO0FBQ2hFSixRQUFBQSxNQUFNLENBQUNJLEdBQUQsQ0FBTixHQUFjTCxHQUFHLENBQUNLLEdBQUQsQ0FBakI7QUFDRCxPQUZELE1BRU8sSUFBSUUsaUJBQUosRUFBVztBQUNoQkMsUUFBQUEsT0FBTyxDQUFDQyxLQUFSLHVFQUNpRUosR0FEakUsMkJBRUlMLEdBQUcsQ0FBQ0ssR0FBRCxDQUZQO0FBS0Q7QUFDRixLQVZELE1BVU8sSUFBSUUsaUJBQUosRUFBVztBQUNoQkMsTUFBQUEsT0FBTyxDQUFDQyxLQUFSLGdCQUNVSixHQURWLGlFQUVFUCxpQkFGRjtBQUlEO0FBQ0YsR0FqQkQ7QUFtQkEsU0FBT0csTUFBUDtBQUNEOztlQUVjRixnQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBpc0RldiBmcm9tICcuL2lzRGV2J1xuXG5jb25zdCBhbGxvd2VkUHJvcGVydGllcyA9IFtcbiAgJ2JhY2tncm91bmQnLFxuICAnYmFja2dyb3VuZENvbG9yJyxcbiAgJ2JhY2tncm91bmRJbWFnZScsXG5cbiAgJ2JvcmRlclJhZGl1cycsXG5cbiAgJ3RyYW5zaXRpb24nLFxuICAnYm94U2hhZG93JyxcbiAgJ29wYWNpdHknLFxuXG4gICdjb2xvcicsXG4gICd0ZXh0U2hhZG93JyxcblxuICAnb3V0bGluZScsXG4gIC8vIE5vdCBzdXJlIGlmIGN1cnNvciBzaG91bGQgYmUgY29uZmlndXJhYmxlXG4gICdjdXJzb3InLFxuXG4gIC8vIEFkZGVkIHRvIHByZXZlbnQgcG9pbnRlciBldmVudHMgb24gZGlzYWJsZWQgdGFiXG4gICdwb2ludGVyRXZlbnRzJ1xuXVxuXG4vKipcbiAqIEBwYXJhbSB7b2JqZWN0P30gb2JqIC0gaW5wdXQgb2JqZWN0IHRoYXQgd2lsbCBiZSBmaWx0ZXJlZCBhZ2FpbnN0IHRoZSBhbGxvd2VkIHByb3BlcnRpZXMuXG4gKiBAcmV0dXJuIHtvYmplY3R9IHRoZSByZXN1bHQgd2lsbCBhbHdheXMgYmUgYSBvYmplY3RcbiAqL1xuZnVuY3Rpb24gY3JlYXRlQXBwZWFyYW5jZShvYmogPSB7fSkge1xuICBjb25zdCByZXN1bHQgPSB7fVxuXG4gIE9iamVjdC5rZXlzKG9iaikuZm9yRWFjaChrZXkgPT4ge1xuICAgIGlmIChhbGxvd2VkUHJvcGVydGllcy5pbmNsdWRlcyhrZXkpKSB7XG4gICAgICBpZiAodHlwZW9mIG9ialtrZXldID09PSAnc3RyaW5nJyB8fCB0eXBlb2Ygb2JqW2tleV0gPT09ICdudW1iZXInKSB7XG4gICAgICAgIHJlc3VsdFtrZXldID0gb2JqW2tleV1cbiAgICAgIH0gZWxzZSBpZiAoaXNEZXYpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcbiAgICAgICAgICBgY3JlYXRlQXBwZWFyYW5jZSgpIG9ubHkgYWNjZXB0cyBzdHJpbmdzIGFzIHByb3BlcnRpZXMsIGtleSAnJHtrZXl9JyB3aXRoIHZhbHVlICcke1xuICAgICAgICAgICAgb2JqW2tleV1cbiAgICAgICAgICB9JyBpcyBub3QgYSBzdHJpbmdgXG4gICAgICAgIClcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGlzRGV2KSB7XG4gICAgICBjb25zb2xlLmVycm9yKFxuICAgICAgICBga2V5ICcke2tleX0nIGlzIG5vdCBpbiB0aGUgYWxsb3dlZCBwcm9wZXJ0aWVzIGZvciBjcmVhdGVBcHBlYXJhbmNlKCk6YCxcbiAgICAgICAgYWxsb3dlZFByb3BlcnRpZXNcbiAgICAgIClcbiAgICB9XG4gIH0pXG5cbiAgcmV0dXJuIHJlc3VsdFxufVxuXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVBcHBlYXJhbmNlXG4iXX0=