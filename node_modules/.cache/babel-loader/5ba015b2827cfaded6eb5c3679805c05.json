{"ast":null,"code":"var _jsxFileName = \"/Users/ghua/projects/forms/src/components/TrainForm.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Grid from '@material-ui/core/Grid';\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport TextField from \"@material-ui/core/TextField\";\nconst useStyles = makeStyles(theme => ({\n  listItem: {\n    padding: theme.spacing(1, 0)\n  },\n  total: {\n    fontWeight: 700\n  },\n  title: {\n    marginTop: theme.spacing(2)\n  }\n}));\nexport default function TrainForm(props) {\n  const [trained, setTrained] = useState(false);\n  const [wantTrain, setWantTrain] = useState(false);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"Have you trained apprentices before?\"), /*#__PURE__*/React.createElement(Checkbox, {\n    checked: trained,\n    onChange: e => setTrained(e.target.checked),\n    color: \"primary\",\n    inputProps: {\n      'aria-label': 'secondary checkbox'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), \"yes\", /*#__PURE__*/React.createElement(Checkbox, {\n    checked: !trained ? true : false,\n    onChange: event => setTrained(!event.target.checked),\n    color: \"primary\",\n    inputProps: {\n      'aria-label': 'secondary checkbox'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), \"No\")), !trained ? /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }\n  }, \"Would you want to receive support from NBSSI?\"), /*#__PURE__*/React.createElement(Checkbox, {\n    checked: wantTrain,\n    onChange: e => setWantTrain(e.target.checked),\n    color: \"primary\",\n    inputProps: {\n      'aria-label': 'secondary checkbox'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }\n  }), \"yes\", /*#__PURE__*/React.createElement(Checkbox, {\n    checked: !wantTrain ? true : false,\n    onChange: event => setWantTrain(!event.target.checked),\n    color: \"primary\",\n    inputProps: {\n      'aria-label': 'secondary checkbox'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 19\n    }\n  }), \"No\")) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, \" \"), wantTrain ? /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"num_of_apprentices\",\n    label: \"How many apprentices can u take on at a time?\",\n    fullWidth: true,\n    type: \"number\",\n    autoComplete: \"num_of_apprentices\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  })) && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"num_of_apprentices\",\n    label: \"How many apprentices can u take on at a time?\",\n    fullWidth: true,\n    type: \"number\",\n    autoComplete: \"num_of_apprentices\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 12\n    }\n  }, \" \")));\n}","map":{"version":3,"sources":["/Users/ghua/projects/forms/src/components/TrainForm.js"],"names":["React","useState","makeStyles","Typography","List","ListItem","ListItemText","Grid","Checkbox","TextField","useStyles","theme","listItem","padding","spacing","total","fontWeight","title","marginTop","TrainForm","props","trained","setTrained","wantTrain","setWantTrain","e","target","checked","event"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Grid from '@material-ui/core/Grid';\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport TextField from \"@material-ui/core/TextField\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    padding: theme.spacing(1, 0),\n  },\n  total: {\n    fontWeight: 700,\n  },\n  title: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport default function TrainForm(props) {\n  const [trained,setTrained] = useState(false)\n  const [wantTrain,setWantTrain] = useState(false)\n\n  return (\n    <React.Fragment>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <div style={{}}>\n            <label style={{fontWeight:'bold'}}>Have you trained apprentices before?</label>\n            <Checkbox\n                checked={trained}\n                onChange={(e)=>setTrained(e.target.checked)}\n                color=\"primary\"\n                inputProps={{ 'aria-label': 'secondary checkbox' }}\n            />yes\n\n            <Checkbox\n                checked={!trained ? true : false}\n                onChange={event => setTrained(!event.target.checked)}\n                color=\"primary\"\n                inputProps={{ 'aria-label': 'secondary checkbox' }}\n            />No\n          </div>\n        </Grid>\n        {\n          !trained ?\n              <Grid item xs={12}>\n                <div style={{}}>\n                  <label style={{fontWeight:'bold'}}>Would you want to receive support from NBSSI?</label>\n                  <Checkbox\n                      checked={wantTrain}\n                      onChange={(e)=>setWantTrain(e.target.checked)}\n                      color=\"primary\"\n                      inputProps={{ 'aria-label': 'secondary checkbox' }}\n                  />yes\n\n                  <Checkbox\n                      checked={!wantTrain ? true : false}\n                      onChange={event => setWantTrain(!event.target.checked)}\n                      color=\"primary\"\n                      inputProps={{ 'aria-label': 'secondary checkbox' }}\n                  />No\n                </div>\n              </Grid> : <p> </p>\n        }\n        {\n          wantTrain ? <Grid item xs={12}>\n            <TextField\n                required\n                id=\"num_of_apprentices\"\n                label=\"How many apprentices can u take on at a time?\"\n                fullWidth\n                type={\"number\"}\n                autoComplete=\"num_of_apprentices\"\n            />\n          </Grid>\n              &&\n              <Grid item xs={12}>\n                <TextField\n                    required\n                    id=\"num_of_apprentices\"\n                    label=\"How many apprentices can u take on at a time?\"\n                    fullWidth\n                    type={\"number\"}\n                    autoComplete=\"num_of_apprentices\"\n                />\n              </Grid>\n\n\n          :<p> </p>\n        }\n\n      </Grid>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}